--1. 现有一个商店的数据库，记录客户及其购物情况，由下面三个表组成：
商品goods（商品号goodsId，商品名goodsName，单价unitprice，商品类别category，供应商provider);
客户customer（客户号customerId,姓名name,住址address,电邮email
性别sex,身份证cardId);
购买purchase（客户号customerId,商品号goodsId,购买数量nums);


create table customer(
customerId varchar2(4) constraint pk_customer_customerid primary key,
name varchar2(8) not null,
address varchar2(8),
email varchar2(8) constraint uk_customer_email unique ,
sex varchar2(4) default '男' check (sex in ('男','女')),
cardId varchar2(8)
);

create table goods(
goodsid varchar2(4) constraint pk_goods_goodsid primary key,
goodsName varchar2(8),
unitprice varchar2(6) check(unitprice>0),
category varchar2(8),
provider varchar2(8)
);

create table purchase(
customerId varchar2(4) references customer(customerId),
goodsid varchar2(4) references goods(goodsid),
nums integer check(nums>0 and nums<=30)
);

请用SQL语言完成下列功能：
--1 建表，在定义中要求声明：
(1)每个表的主外键；
(2)客户的姓名不能为空值；
(3)单价必须大于0，购买数量必须在1到30之间；
(4)电邮不能够重复;
(5)客户的性别必须是 男 或者 女,默认是男

2. 如果在建表时忘记建立必要的约束，则可以在建表后使用
alter table命令为表增加约束.但是要注意: 增加not null约束
时,需要使用modify选项,而增加其它四种约束使用add选项。
(1)每个表的主外码；
--(2)客户的姓名不能为空值；--增加商品名也不能为空
alter table goods modify goodsName not null;
(3)单价必须大于0，购买数量必须在1到30之间；
--(4)电邮不能够重复;--增加身份证也不重复
alter table goods add email unique;
(5)客户的性别必须是 男 或者 女,默认是男
(6)增加客户的住址只能是'海淀'、'朝阳'、'东城'、
'西城'、'通州'、'崇文'
alter table customer add constraint address check (address in ('海淀','朝阳','东城','西城','通州','崇文'));

--3.创建一张表testid(tesetid int not null,Testname varchar2(10))
--用自定义序列值设定testid的值

create sequence my_seq
start with 1
increment by 1
maxvalue 10
minvalue 1
cycle
cache 5;

create table estid(
tesetid int not null,
Testname varchar2(10));

--4. 向表中插入下列数据，并提交，查询数据；
ID    FIRST_NAME   LAST_NAME   MGRID   SALARY
1      Rose          Tyler          4         1500
2      Matha        Jones         4          2200
3      Donna       Noble         4          1300
4      Doctor       Who                     3500      
5      Jack          Harkness      1         3000
create table employee(
id int unique,
first_name varchar2(8),
last_name varchar2(8),
mgrid int,
salary int
);

insert into employee values (my_seq.nextval,'Rose','Tyler',4,1500);
insert into employee values (my_seq.nextval,'Matha','Jones',4,2200);
insert into employee values (my_seq.nextval,'Donna','Noble',4,1300);
insert into employee values (my_seq.nextval,'Doctor','Who',4,3500);
insert into employee values (my_seq.nextval,'Jack','Harkness',4,3000);
alter table employee modify (salary number);

--3. 将3号员工的last_name修改为"Tate"，并提交，查询数据；
update employee  set last_name='Tate'  where id=3; 

--4. 将所有工资少于5000的员工的工资修改为5000 (不提交)，并设置保存点，查询数据；
savepoint salary_beforeupdate;
update employee set salary=5000 where salary<5000;


--5. 删除employee表中所有数据(不提交)，查询数据；
delete from employee ;
--6. 回滚到第五题中的设置的保存点，查询数据；
rollback to savepoint salary_beforeupdate;
--7. 删除表employee中所有数据，并提交，查询数据；
delete from employee ;
commit;





